# This workflow shows you how the action can be used to download and install oc bundle and then be used to execute oc commands in following scripts
#
# To configure this workflow:
#
# 1. Ensure that the URL where oc can be downloaded exists
# 2. Setup secrets in your repository by going to settings
# 4. Change the values for the APPNAME, DOCKERIMAGE and PROJECT

name: Setup oc and execute script
on: [push]

env:
  PROJECT: hello-world
  DOCKERIMAGE: node:10
  APPNAME: myapp

jobs:
  build:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: OpenShift Action
      uses: redhat-developer/openshift-actions@v2.1.0
      with:
        version: '3.11.163'
    - name: Authenticate with your OpenShift Cluster
      run: |
        oc login --token=${{ secrets.API_TOKEN }} --server=${{ secrets.OPENSHIFT_SERVER_URL }} --insecure-skip-tls-verify=true
    # Deploy the Docker image to the OpenShift cluster
    - name: Deploy to OpenShift
      run: |
        oc project ${PROJECT} || oc new-project ${PROJECT}
        oc new-build --strategy docker --binary --docker-image ${DOCKERIMAGE} --name ${APPNAME}
        oc start-build ${APPNAME} --from-dir . --follow
        oc new-app ${PROJECT}/${APPNAME}:latest
        oc expose svc/"${APPNAME}"